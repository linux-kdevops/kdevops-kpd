---
- name: Adds the user to the respective distro libvirt groups
  become: yes
  become_method: sudo
  user:
    name: "{{ running_user }}"
    groups: libvirt,kvm,libvirt-qemu
    append: yes
  when:
    - not libvirt_session
    - not only_verify_user|bool

- name: Check if apparmor_status exists
  stat:
    path: /usr/sbin/apparmor_status
  register: apparmor_file_stat_result
  when: 'only_verify_user|bool'

- name: Verify if AppArmor is disabled when applicable
  become: yes
  become_method: sudo
  command:
    cmd: /usr/sbin/apparmor_status --enabled
  register: apparmor_check
  failed_when: apparmor_check.rc == 0
  ignore_errors: yes
  when:
    - 'only_verify_user|bool'
    - 'apparmor_file_stat_result.stat.exists'

- name: Disabling AppArmor -> Create directory for grub settings
  become: yes
  become_method: sudo
  ansible.builtin.file:
    path: /etc/default/grub.d
    state: directory
    mode: '0755'
  when:
    - 'only_verify_user|bool'
    - 'apparmor_file_stat_result.stat.exists'
    - apparmor_check.rc == 0
  tags: [ 'build-deps' ]

- name: Disabling AppArmor -> Add apparmor=0 to grub configuration
  become: yes
  become_method: sudo
  ansible.builtin.copy:
    content: 'GRUB_CMDLINE_LINUX_DEFAULT="$GRUB_CMDLINE_LINUX_DEFAULT apparmor=0"'
    dest: /etc/default/grub.d/apparmor.cfg
    mode: '0644'
  when:
    - 'only_verify_user|bool'
    - 'apparmor_file_stat_result.stat.exists'
    - apparmor_check.rc == 0
  tags: [ 'build-deps' ]

- name: Disabling AppArmor -> Update grub
  become: yes
  become_method: sudo
  ansible.builtin.command:
    cmd: update-grub
  when:
    - 'only_verify_user|bool'
    - 'apparmor_file_stat_result.stat.exists'
    - apparmor_check.rc == 0
  tags: [ 'build-deps' ]

- name: Disabling AppArmor -> Ask user to reboot the system
  debug:
    msg: |
      AppArmor has been disabled. To apply the changes, please reboot your system.
  when:
    - 'only_verify_user|bool'
    - 'apparmor_file_stat_result.stat.exists'
    - apparmor_check.rc == 0
  tags: [ 'build-deps' ]

- name: Disabling AppArmor -> Terminate playbook
  ansible.builtin.meta: end_play
  when:
    - 'only_verify_user|bool'
    - 'apparmor_file_stat_result.stat.exists'
    - apparmor_check.rc == 0
  tags: [ 'build-deps' ]

- name: Verifies user's effective group allows to run libvirt/kvm without being root
  shell: groups | grep {{ item }}
  with_items:
    - libvirt
    - kvm
    - libvirt-qemu
  loop_control:
    label: "Verifying if user's current effective groups includes {{ item }}"
  register: group_check
  failed_when: False
  ignore_errors: true
  when:
    - not libvirt_session
    - not only_verify_user|bool

- name: Ensure our user is part of the libvirt/kvm groups
  tags: [ 'journal' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  ansible.builtin.user:
    name:  "{{ ansible_user_id }}"
    groups:
      - libvirt
      - kvm
      - libvirt-qemu
    append: yes
  when:
    - not libvirt_session
    - not only_verify_user|bool
